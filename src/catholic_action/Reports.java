
package catholic_action;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.util.Duration;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.controlsfx.control.Notifications;

/**
 *
 * @author CollyneJumah
 */
public class Reports extends javax.swing.JFrame {
    Connection conn= null;
    ResultSet rs;
    Statement st;
    PreparedStatement pst=null;

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cboSelectYear = new javax.swing.JComboBox<>();
        cboSelestJumuiya = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)), "Generate Members List", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(51, 102, 255))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 255), 1, true), "Jumuiyas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(102, 102, 255))); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Print All members List");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("St.Bridgit's");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("St.Peters'");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("St.Charles'");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("St.Thomas");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("St.Stephenes'");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Holy Family");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)), "Year Of Study", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(102, 102, 255))); // NOI18N

        cboSelectYear.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboSelectYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--Year--", "1", "2", "3", "4", "Associate" }));
        cboSelectYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSelectYearActionPerformed(evt);
            }
        });

        cboSelestJumuiya.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--Jumuiya--", "ST.THOMAS AQUINUS", "ST.PETERS", "ST.BRIDGITS", "HOLY FAMILY", "ST.CHARLES", "ST.STEPHENES" }));
        cboSelestJumuiya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSelestJumuiyaActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myImages/Print_30px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSelectYear, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(cboSelestJumuiya, 0, 152, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSelectYear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSelestJumuiya, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cboSelectYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSelectYearActionPerformed
        reportsYear();
    }//GEN-LAST:event_cboSelectYearActionPerformed

    private void cboSelestJumuiyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSelestJumuiyaActionPerformed
        reportsJumuiya();
    }//GEN-LAST:event_cboSelestJumuiyaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Motif".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboSelectYear;
    private javax.swing.JComboBox<String> cboSelestJumuiya;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables

private void reportsYear(){

  final String me = (String) cboSelectYear.getSelectedItem();
           new Thread() {
            @Override
            public void run() {
                try {
                   // maskerPane.setVisible(true);
                       ImageIcon icon = new ImageIcon(getClass().getResource("/myImages/10.gif"));
                  JOptionPane.showMessageDialog(null, "Please wait.....Processing Report\nClick OK to continue","",JOptionPane.INFORMATION_MESSAGE,icon);

                    String reportName = "CatholicAction";
                    Connect cc= new Connect();
                   conn=cc.connect();
                    InputStream ur17 = getClass().getResourceAsStream("/catholic_action/Year.jrxml");

                    JasperDesign dis = JRXmlLoader.load(ur17);

                   
                      
                        //String sql = "SELECT Id,Name,Reg_Number,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
                       String sql="SELECT * FROM  church_members_records where Year_Of_Study="+me+"";
                        JRDesignQuery newQuery = new JRDesignQuery();
                        newQuery.setText(sql);
                        dis.setQuery(newQuery);
                        JasperReport rep = JasperCompileManager.compileReport(dis);

                        JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

                        JRExporter exporter = new JRPdfExporter();

                        exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
                        exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

                        exporter.exportReport();
                        JasperViewer.viewReport(jasPrint);

                   

//            String reportName = "form1";
//            String reportPath = "C:\\Users\\zachie depp\\Documents\\NetBeansProjects\\SchoolManagerFINAL2\\src\\reports\\for.jrxml";
//            Map<String, Object> parameters = new HashMap<>();
//
//            JasperReport jr = JasperCompileManager.compileReport(reportPath);
//            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
//            JasperViewer.viewReport(jp);
//            InputStream path = this.getClass().getResourse("form1.jrxml");
//            // compiles jrxml
//            JasperCompileManager.compileReportToFile(reportName + ".jrxml");
//            // fills compiled report with parameters and a connection
//            JasperPrint print = JasperFillManager.fillReport(reportName + ".jasper", parameters, con);
//            // exports report to pdf
//            JRExporter exporter = new JRPdfExporter();
//            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
//            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here
//
//            exporter.exportReport();
                   // maskerPane.setVisible(false);

                    
                 Notifications notificationBuilder = Notifications.create()
                .title("Report generation complete")
                .text("please wait")
                .hideAfter(Duration.seconds(3))
                .darkStyle()
                .position(Pos.CENTER)
                .onAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {

                        JOptionPane.showMessageDialog(null,"cliced on notification");
                    }
                });
        notificationBuilder.showConfirm();
                    
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null,"No data found"+ ex);
                   // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

                } catch (FileNotFoundException ex) {
                     JOptionPane.showMessageDialog(null, ex);
                   // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
                } 
//                 Alert alert = new Alert(Alert.AlertType.INFORMATION);
//                 alert.setTitle("Sucess :");
//                 alert.setHeaderText("completed !!");
//                 alert.setContentText("Report generation completed Sucessfuly you can now print the pdf files");
//                 alert.initStyle(StageStyle.UNDECORATED);
//                 alert.showAndWait();
            }
        }.start();
       
        
    }
    
private void reportsJumuiya(){

  final String me = (String) cboSelestJumuiya.getSelectedItem();
           new Thread() {
            @Override
            public void run() {
                try {
                   // maskerPane.setVisible(true);
                     ImageIcon icon = new ImageIcon(getClass().getResource("/myImages/10.gif"));
                  JOptionPane.showMessageDialog(null, "Please wait...\nProcessing Report","",JOptionPane.INFORMATION_MESSAGE,icon);

                    String reportName = "CatholicAction";
                    Connect cc= new Connect();
                   conn=cc.connect();
                    InputStream ur17 = getClass().getResourceAsStream("/catholic_action/Jumuiya.jrxml");

                    JasperDesign dis = JRXmlLoader.load(ur17);

                   
                      
                        //String sql = "SELECT Id,Name,Reg_Number,Phone_Number,Jumuiya,Year_Of_Study FROM church_members_records where Year_Of_Study =" + me + "";
                       String sql="SELECT * FROM  church_members_records where Jumuiya="+me+" AND Year_Of_Study !=\"Associate\";";
                       
                        JRDesignQuery newQuery = new JRDesignQuery();
                        newQuery.setText(sql);
                        dis.setQuery(newQuery);
                        JasperReport rep = JasperCompileManager.compileReport(dis);

                        JasperPrint jasPrint = JasperFillManager.fillReport(rep, null, conn);

                        JRExporter exporter = new JRPdfExporter();

                        exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasPrint);
                        exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here

                        exporter.exportReport();
                        JasperViewer.viewReport(jasPrint);

                  

//            String reportName = "form1";
//            String reportPath = "C:\\Users\\zachie depp\\Documents\\NetBeansProjects\\SchoolManagerFINAL2\\src\\reports\\for.jrxml";
//            Map<String, Object> parameters = new HashMap<>();
//
//            JasperReport jr = JasperCompileManager.compileReport(reportPath);
//            JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
//            JasperViewer.viewReport(jp);
//            InputStream path = this.getClass().getResourse("form1.jrxml");
//            // compiles jrxml
//            JasperCompileManager.compileReportToFile(reportName + ".jrxml");
//            // fills compiled report with parameters and a connection
//            JasperPrint print = JasperFillManager.fillReport(reportName + ".jasper", parameters, con);
//            // exports report to pdf
//            JRExporter exporter = new JRPdfExporter();
//            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
//            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, new FileOutputStream(reportName + ".pdf")); // your output goes here
//
//            exporter.exportReport();
                   // maskerPane.setVisible(false);

                    
                 Notifications notificationBuilder = Notifications.create()
                .title("Report generation complete")
                .text("please wait")
                .hideAfter(Duration.seconds(3))
                .darkStyle()
                .position(Pos.CENTER)
                .onAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {

                        JOptionPane.showMessageDialog(null,"cliced on notification");
                    }
                });
        notificationBuilder.showConfirm();
                    
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null,"No data found"+ ex);
                   // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());

                } catch (FileNotFoundException ex) {
                     JOptionPane.showMessageDialog(null, ex);
                   // Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex.getLocalizedMessage());
                } 
//                 Alert alert = new Alert(Alert.AlertType.INFORMATION);
//                 alert.setTitle("Sucess :");
//                 alert.setHeaderText("completed !!");
//                 alert.setContentText("Report generation completed Sucessfuly you can now print the pdf files");
//                 alert.initStyle(StageStyle.UNDECORATED);
//                 alert.showAndWait();
            }
        }.start();
       
        
    }
    


}
